// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../../../../node_modules/@prisma/client/authn"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  phone    String
  username String
  password String
  created  DateTime
  role     Roles?   @relation(fields: [roleId], references: [id])
  roleId   String?  @db.ObjectId

  @@map("users")
}

model Shops {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  address     String
  permissions Permissions[]

  @@map("shops")
}

model Roles {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  isSuperAdmin Boolean?      @default(false)
  user         Users[]
  permission   Permissions[] @relation(fields: [permissionId], references: [id])
  permissionId String[]      @db.ObjectId

  @@map("roles")
}

model Permissions {
  id     String     @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  status StatusEnum
  action ActionEnum
  shop   Shops?     @relation(fields: [shopId], references: [id])
  shopId String?    @db.ObjectId
  role   Roles[]    @relation(fields: [roleId], references: [id])
  roleId String[]   @db.ObjectId

  @@map("permissions")
}

enum StatusEnum {
  ACTIVE   @map("ACTIVE")
  INACTIVE @map("INACTIVE")
}

enum ActionEnum {
  CREATE @map("CREATE")
  READ   @map("READ")
  UPDATE @map("UPDATE")
  DELETE @map("DELETE")
}
