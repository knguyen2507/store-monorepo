// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../../../../node_modules/@prisma/client/authn"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  phone        String
  username     String
  password     String
  created      DateTime?
  profile      Profiles[]
  isSuperAdmin Boolean?   @default(false)

  @@map("users")
}

model Shops {
  id      String     @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  address String
  profile Profiles[]

  @@map("shops")
}

model Roles {
  id      String     @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  profile Profiles[]

  @@map("roles")
}

model Permissions {
  id      String     @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  status  StatusEnum
  action  ActionEnum
  profile Profiles[]

  @@map("permissions")
}

model Profiles {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  role         Roles?       @relation(fields: [roleId], references: [id])
  roleId       String?      @db.ObjectId
  permission   Permissions? @relation(fields: [permissionId], references: [id])
  permissionId String?      @db.ObjectId
  shop         Shops?       @relation(fields: [shopId], references: [id])
  shopId       String?      @db.ObjectId
  user         Users?       @relation(fields: [userId], references: [id])
  userId       String?      @db.ObjectId

  @@map("profiles")
}

enum StatusEnum {
  ACTIVE   @map("ACTIVE")
  INACTIVE @map("INACTIVE")
}

enum ActionEnum {
  CREATE @map("CREATE")
  READ   @map("READ")
  UPDATE @map("UPDATE")
  DELETE @map("DELETE")
}
